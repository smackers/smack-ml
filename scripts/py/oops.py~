from xml.dom.minidom import parse
import xml.dom.minidom
import pickle

class best_unroll():
	

	def data_structure(property_for,result,unroll_cputime,i):

		#find <tag> = 'run' in the .xml files
		runs = result.getElementsByTagName('run')
	
		for run in runs:
			#check if 'run' has attributes, 'name' and 'properties' and then begin the data-structure
			if run.hasAttribute('name') and run.hasAttribute('properties'):
				filename = str(run.getAttribute('name'))
				filename = '../../c/' + filename[16:]   #to do a type-match of filename for merging with feature vectors
	
				if filename in unroll_cputime:
					unroll_cputime[filename].append(property_for)
				else:			
					unroll_cputime[filename] = []
					unroll_cputime[filename].append(property_for)
				
				unroll_cputime[filename].append(i)	# 'i' is the unroll value
				#unroll_cputime[filename].append(check)

			#find <tag> = 'column' as the child of <tag> = 'run'
			columns = run.getElementsByTagName('column')
			
			for column in columns:
			
				if str(column.getAttribute('title')) == 'status':
					unroll_cputime[filename].append(str(column.getAttribute('value')))

				#find value of 'status' and 'cuptime' and append to list
				if str(column.getAttribute('title')) == 'cputime':
					#convert the value from string to float and rounding the value
					value = str(column.getAttribute('value'))
					value = round(float(value[:len(value)-1]),10)
			
				if str(column.getAttribute('title')) == 'category':
					face_value = str(column.getAttribute('value'))
					
					if face_value == 'correct':
						unroll_cputime[filename].append(value)
					else:
						unroll_cputime[filename].append(500000000)	#face_value = ('wrong' || 'TIMEOUT')
					unroll_cputime[filename].append(face_value)

		return unroll_cputime	


